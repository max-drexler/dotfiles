#!/usr/bin/env bash
#
# install all files to ~ by symlinking them,
# this way, updating them is as simple as git pull
#
# Author: Dave Eddy <dave@daveeddy.com>
# Date: May 25, 2012
# License: MIT
#
# Editor: Max Drexler <mndrexler@gmail.com>
# Date: Jan 13, 2025


# Keep a log of "installed" dotfiles for easy uninstall
INSTALL_LOG_PATH="${INSTALL_LOG_PATH-$HOME/.dotinstall}"

# verbose ln, because `ln -v` is not portable
symlink() {
	printf '%55s ==> %s\n' "$1" "$2"
	ln -nsf "$@"
}

log_install() {
    [ $# -ne 1 ] && return 1
    if ! grep -sq "$1" "$INSTALL_LOG_PATH"; then
        printf '%s\n' "$1" >> "$INSTALL_LOG_PATH"
    fi
}

# If grep doesn't exist, we can't keep a log
if command -v grep --version &>/dev/null; then
    # If install path was purposely left blank, don't keep a log
    if [ -n "$INSTALL_LOG_PATH" ]; then
        KEEP_LOG=0
    else
        KEEP_LOG=1
    fi
else
    KEEP_LOG=1
fi

# update the submodules
git submodule update --init --recursive

# Link dotfiles
dotfiles=(
    aliasrc
    bash_profile
	bashrc
    config/alacritty
    config/dnf5
    config/git
    config/tmux
    inputrc
    vim # make sure vim is first for logging
	vimrc
)
for f in "${dotfiles[@]}"; do
	[[ -d ~/.$f && ! -L ~/.$f ]] && rm -r ~/."$f"
	symlink "$PWD/$f" ~/."$f"
    [ "$KEEP_LOG" -eq 0 ] && log_install ~/."$f"
done


unset INSTALL_LOG_PATH KEEP_LOG

true
